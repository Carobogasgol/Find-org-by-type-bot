from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.utils.keyboard import ReplyKeyboardBuilder


def get_keyboard(
        *btns: str,
        placeholder: str = None,
        request_contact=None,
        request_location=None,
        sizes: tuple[int] = (2,),
):
    keyboard = ReplyKeyboardBuilder()

    for index, text in enumerate(btns, start=0):

        if request_contact and request_contact == index:
            keyboard.add(KeyboardButton(text=text, request_contact=True))

        elif request_location and request_location == index:
            keyboard.add(KeyboardButton(text=text, request_location=True))

        else:
            keyboard.add(KeyboardButton(text=text))

    return keyboard.adjust(*sizes).as_markup(
        resize_keyboard=True, input_field_placrholder=placeholder)


location_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é üìç', request_location=True)]],
    resize_keyboard=True,
    input_field_placeholder='–°–¥–µ–ª–∞–π —ç—Ç–æ!'
)


# # —ç—Ç–æ —Ç–æ, —á—Ç–æ –±—ã–ª–æ –¥–æ —É–ª—É—á—à–µ–Ω–∏—è
# start_kb = ReplyKeyboardMarkup(
#     keyboard=[
#         [
#             KeyboardButton(text="–ú–µ–Ω—é"),
#             KeyboardButton(text="–°—Ç–∞—Ä—Ç"),
#         ],
#         [
#             KeyboardButton(text="–õ–æ–∫–∞—Ü–∏—è", request_location=True),
#             KeyboardButton(text="—á–º–æ"),
#             KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
#         ],
#     ],
#     resize_keyboard=True,
#     input_field_placeholder='–ß—ë —Ç–µ–±–µ –Ω–∞–¥–æ, –ø—É—Ç–Ω–∏–∫?'
#     # —ç—Ç–æ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ —Å—Ç—Ä–æ–∫–µ —Ç–µ–∫—Å—Ç–∞
# )


# start_kb3.row(KeyboardButton(text='example'))  # –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Å—Ç–æ –∫–Ω–æ–ø–∫—É –Ω–æ–≤—ã–º —Ä—è–¥–æ–º
